version: 2
jobs:
  build:
    working_directory: ~/django-init
    environment:
      TEST_RESULTS: /tmp/test-results
    docker:
      - image: circleci/python:3.7.2
        environment:
          DATABASE_URL: postgresql://root@localhost/hello_world?sslmode=disable
      - image: circleci/postgres:11.0
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: hello_world
    steps:
      - checkout  # Get the latest clone of the repo in CI.
      - run:
          name: Set-up test_results directory and set-up permissions
          command: |
            mkdir -p $TEST_RESULTS
            sudo chown -R circleci:circleci /usr/local/bin
      - run:
          name: Setup nvm and npm
          command: |
            wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
            # Activate nvm
            export NVM_DIR=$HOME/.nvm
            touch $HOME/.nvmrc
            source $NVM_DIR/nvm.sh
            # Use node 8.9
            nvm install 8.9 && nvm alias default 8.9
            echo 8.9 > $HOME/.nvmrc
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
            # To fix npm install : "node-pre-gyp: Permission denied"
            npm config set user 0
            npm config set unsafe-perm true
            npm install -g npx webpack webpack-cli jest npm
            node --version
            npm --version
      - run:
          name: Update apt source list for Postgres
          command: |
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main" > /etc/apt/sources.list.d/PostgreSQL.list'
            sudo apt update
            sudo apt-get update && sudo apt-get install -y postgresql-client-11
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: Install requirements
          command: |
            virtualenv venv
            source venv/bin/activate
            pip install cookiecutter
            pip install -U pip cookiecutter ansible==2.5.0 fabric3==1.14.post1
      - run:
          name: Run tests
          command: |
            source venv/bin/activate
            ./run_test.sh
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1
