{%raw%}---
- name: Add official Nginx repo
  apt_repository:
    repo: 'ppa:nginx/stable'
    update_cache: yes

- name: install NGINX Server.
  apt: pkg=nginx-full state=present

- name: make sure ssl directory exists
  file: path={{ ssl_cert_dir }} state=directory

- name: check {{ letsencrypt_ssl_cert_dir }} exists
  stat: path={{ letsencrypt_ssl_cert_dir }}
  register: letsencrypt_dir

- import_tasks: htpasswd.yml

- import_tasks: letsencrypt.yml
  when: vm == 0 and use_letsencrypt and letsencrypt_dir.stat.exists == false

# running cron job each monday
- name: add letsencrypt renew cron
  cron:
   name: "Renew all certificates"
   minute: "0"
   hour: "2"
   weekday: "1"
   job: 'certbot renew --non-interactive --webroot -w {{ letsencrypt_challange_root }} --renew-hook "service nginx reload"'
  when: vm == 0 and use_letsencrypt

- name: check ssl/nginx.crt exists
  stat: path={{ ssl_certificate }}
  register: nginx_cert

- name: check ssl/nginx.key exists
  stat: path={{ ssl_certificate_key }}
  register: nginx_key

- fail: msg="Whoops! ssl certificate doesn't exist"
  when: vm == 0 and (nginx_cert.stat.exists == false or nginx_key.stat.exists == false)

- name: generate ssl forward secrecy key
  command: openssl dhparam -out {{ ssl_forward_secrecy_key_path }} {{ ssl_forward_secrecy_key_length }} creates={{ ssl_forward_secrecy_key_path }}
  when: vm == 0

- name: copy base nginx configuration.
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  notify: reload nginx

- name: delete default vhost.
  action: file path=/etc/nginx/sites-enabled/default state=absent
  notify: reload nginx

- name: copy site host port 80 configuration.
  template: src=site.80.conf.j2 dest=/etc/nginx/sites-available/{{ nginx_conf_file_name }}.80.conf
  notify: reload nginx

- name: copy site host port 443 configuration.
  template: src=site.443.conf.j2 dest=/etc/nginx/sites-available/{{ nginx_conf_file_name }}.443.conf
  when: nginx_cert.stat.exists == true and nginx_key.stat.exists == true
  notify: reload nginx

- name: put host port 80 configuration in sites-enabled
  file: src=/etc/nginx/sites-available/{{ nginx_conf_file_name }}.80.conf dest=/etc/nginx/sites-enabled/{{ nginx_conf_file_name }}.80 state=link
  notify: reload nginx

- name: put host port 443 configuration in sites-enabled
  file: src=/etc/nginx/sites-available/{{ nginx_conf_file_name }}.443.conf dest=/etc/nginx/sites-enabled/{{ nginx_conf_file_name }}.443 state=link
  when: nginx_cert.stat.exists == true and nginx_key.stat.exists == true
  notify: reload nginx

- name: ensure nginx is running
  service: name=nginx state=started{%endraw%}
