{% raw %}---
- name: apt_get install uwsgi packages
  apt:
    pkg: ['uwsgi-emperor', 'uwsgi', 'uwsgi-src', 'uuid-dev', 'libcap-dev', 'libpcre3-dev']
    state: present
  tags: ['configure']

# compile python36 plugin for uwsgi
# https://dev.to/pauloxnet/how-to-use-uwsgi-with-ptyhon36-in-ubuntu
- name: python37 plugin | create build dir
  file: path=/usr/src/uwsgi/plugins/python state=directory owner={{user}} group={{uwsgi_group}} recurse=yes
  tags: ['configure']

- name: compile python37 plugin for uwsgi
  shell: >
    PYTHON=python3.7 uwsgi --build-plugin "/usr/src/uwsgi/plugins/python python37" &&
    mv python37_plugin.so /usr/lib/uwsgi/plugins/python37_plugin.so &&
    chmod 644 /usr/lib/uwsgi/plugins/python37_plugin.so

- name: make sure project directory is owned by uwsgi group
  file: path={{ project_path }} state=directory owner={{user}} group={{uwsgi_group}} recurse=yes
  tags: ['configure']

- name: copy django-uwsgi logrotate
  template: src=django.logrotate.j2
            dest=/etc/logrotate.d/uwsgi-{{ project_namespace }}
            mode=644
  tags: ['configure']

- name: make sure uwsgi log directory exists
  file: path={{ uwsgi_log_dir }} state=directory owner={{uwsgi_user}} group={{uwsgi_group}} mode=751 recurse=yes
  tags: ['configure']

- name: ensure django app config is added as uwsgi vassal
  template: src=django.uwsgi.ini.j2
            dest={{ uwsgi_conf_path }}/{{project_namespace }}.ini
            mode=644
  tags: ['deploy']
  register: uwsgiconf
{% endraw %}
