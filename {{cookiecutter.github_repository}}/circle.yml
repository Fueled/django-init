## Customize the test machine
machine:
  python:
    version: '3.6.4'
  environment:
    # each command runs in its own shell, so just adding an export FOO=bar command won't work
    DATABASE_URL: "postgres://ubuntu@localhost/circle_test"
  #services: # By default popular ones are running on our build machines (bound to localhost), including Postgres, MySQL, Redis and MongoDB
  # -redis

## Customize checkout
#checkout:
#  post:
#	   - git submodule sync

## Customize dependencies
dependencies:
  override:
    {% if cookiecutter.add_ansible.lower() == 'y' %}- pip install ansible{% endif %}
    - pip install -r requirements/development.txt

{% if cookiecutter.postgis == 'y' %}
## Customize database setup
database:
  post:
    - psql -c "CREATE EXTENSION postgis;" -d circle_test{% endif %}

## Customize test commands
test:
  override:
    - flake8
    - pytest --cov --cov-report term-missing -v --tb=native --junitxml=$CIRCLE_TEST_REPORTS/summary.xml
    - coverage html -d $CIRCLE_ARTIFACTS
    {% if cookiecutter.add_ansible.lower() == 'y' %}- ansible-playbook -i provisioner/hosts provisioner/site.yml --syntax-check{% endif %}

## Customize deployment commands
{% if cookiecutter.enable_heroku_deployment.lower() == 'y' %}
# To enable Heroku deployment add heroku API key under project settings deployment in circle
deployment:
  dev:
    branch: master
    owner: {{ cookiecutter.github_username }}
    heroku: # add key via https://circleci.com/account/heroku
      appname: {{ cookiecutter.main_module }}-dev
  qa:
    branch: qa
    owner: {{ cookiecutter.github_username }}
    heroku:
      appname: {{ cookiecutter.main_module }}-qa
  prod:
    branch: prod
    owner: {{ cookiecutter.github_username }}
    heroku:
      appname: {{ cookiecutter.main_module }}-prod
{% endif %}

## Custom notifications
#notify:
 # webhooks:
    # A list of hashes representing hooks. Only the url field is supported.
   # - url: https://someurl.com/hooks/circle
