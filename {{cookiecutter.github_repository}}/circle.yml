## Customize the test machine
machine:
  python:
    version: {{ '3.5' if cookiecutter.python3.lower() == 'y' else '2.7.4'}} # 2.7 will cause an error with py.test
  environment:
    # each command runs in its own shell, so just adding an export FOO=bar command won't work
    DATABASE_URL: postgres://postgres@localhost/{{ cookiecutter.main_module }}
    DJANGO_SECRET: openssl rand -base64 32
    #DATABASE_URL: postgres://ubuntu:@127.0.0.1:5432/circle_test
  #services: # By default popular ones are running on our build machines (bound to localhost), including Postgres, MySQL, Redis and MongoDB
  # -redis 

## Customize checkout
#checkout:
#  post:
#	 - git submodule sync
#    - git submodule update --init # use submodules

## Customize dependencies
dependencies:
  override:
    #- pip install --upgrade pip
    #- pip install ansible
    - pip install pip-accel
    - pip-accel install ansible
    - pip-accel install -r requirements/development.txt

# Normally you will not have to clear the cache permanently, but if you feel that’s what you need, 
# you can just remove the necessary parts of the cache anywhere in your circle.yml’s dependencies section, before the cache is saved:
  post:
    - rm -f $HOME/.cache/pip/log/debug.log
#    - bundle install: # note ':' here
#        timeout: 180 # fail if command has no output for 3 minutes

# we automatically cache and restore many dependencies between
# builds. If you need to, you can add custom paths to cache:
  cache_directories:
    - $HOME/.cache/pip
    - $HOME/.pip-accel
#    - "~/custom_2" # relative to the user's home directory

## Customize database setup
#database:
#  override:
    # replace CircleCI's generated database.yml
#    - cp config/database.yml.ci config/database.yml

## Customize test commands
test:
  pre:
    #- export DATABASE_URL=postgres://postgres@localhost/{{ cookiecutter.main_module }}
    #- export DJANGO_SECRET=`openssl rand -base64 32`
    - psql -c "CREATE DATABASE {{ cookiecutter.main_module }};" -U postgres
    {% if cookiecutter.postgis == 'y' -%}
    - psql -c "CREATE EXTENSION postgis;" -U postgres -d {{ cookiecutter.main_module }}
    {% endif %}

  override:
    - flake8
    - py.test --cov -v --tb=native
    - ansible-playbook -i provisioner/hosts provisioner/site.yml --syntax-check


## Customize deployment commands
# To enable Heroku deployment add heroku API key under project settings deployment in circle
deployment: 
  dev:
    branch: master
    owner: {{ cookiecutter.github_username }}
    heroku: # add key via https://circleci.com/account/heroku
      appname: {{ cookiecutter.main_module }}-dev
  qa:
    branch: qa
    owner: {{ cookiecutter.github_username }}
    heroku:
      appname: {{ cookiecutter.main_module }}-qa
  prod:
    branch: prod
    owner: {{ cookiecutter.github_username }}
    heroku:
      appname: {{ cookiecutter.main_module }}-prod

## Custom notifications
#notify:
 # webhooks:
    # A list of hashes representing hooks. Only the url field is supported.
   # - url: https://someurl.com/hooks/circle






