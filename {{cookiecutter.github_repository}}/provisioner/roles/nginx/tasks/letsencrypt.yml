{%raw%}---
- name: apt-get install letsencrypt dependencies packages
  apt:
    pkg: ['augeas-lenses', 'dialog', 'libaugeas0', 'libffi-dev']
    state: present

- name: Add official Certbot repo
  apt_repository:
    repo: 'ppa:certbot/certbot'
    update_cache: yes

- name: install certbot
  apt:
    pkg: python-certbot-nginx
    state: present

- name: create certbot folder
  become: yes
  file: path={{ letsencrypt_challenge_root }} state=directory owner={{ user }} group={{ nginx_user }} mode="u=rwx,g=rwxs,o=r"

- name: reload nginx
  service: name=nginx state=reloaded

- name: Update apt-cache if not already ran
  shell: apt update
  become: yes
  when: apt_updated is not defined

- name: upgrade ca-certificates
  apt: pkg=ca-certificates state=latest

- name: stop nginx if running
  service: name=nginx state=stopped

- name: request cert
  shell: certbot certonly --standalone -w {{ letsencrypt_challenge_root }} -d {{ domain_name }} --email {{ letsencrypt_email }} --agree-tos --non-interactive
  args:
    creates: '{{ letsencrypt_ssl_cert_dir }}'

- name: start nginx
  service: name=nginx state=started

- name: remove any cert diretory if exist
  file: path={{ ssl_cert_dir }}/{{ domain_name }} state=absent

- name: symblink certificates
  file: src={{ letsencrypt_ssl_cert_dir }} dest={{ ssl_cert_dir }}/{{ domain_name }} owner={{ user }} group=www-data state=link

# running cron job each monday
- name: add letsencrypt renew cron
  cron:
   name: "Renew all certificates"
   minute: "0"
   hour: "2"
   weekday: "1"
   job: "certbot renew --non-interactive --webroot --webroot-path {{ letsencrypt_challenge_root }} --renew-hook 'service nginx reload' >> /var/log/certbot.log"
{%endraw%}
