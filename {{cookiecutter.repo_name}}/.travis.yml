language: python
python:
- '2.7'
install: pip install -q -r requirements/development.txt
before_script:
- flake8
- export DATABASE_URL=postgres://postgres@localhost/{{ cookiecutter.repo_name }}
- export DJANGO_SECRET=`openssl rand -base64 32`
- psql -c "CREATE DATABASE {{ cookiecutter.repo_name }};" -U postgres

script:
- coverage run --source={{ cookiecutter.repo_name }} --omit='*tests*,*commands*,*migrations*,*admin*,*config*,*wsgi*' -m py.test -v --tb=native
- coverage report

notifications:
  hipchat:
    rooms:
      # travis encrypt api_token@room_name --add notifications.hipchat.rooms
      secure: <add_room_key_here>
    template:
    - '%{repository}#%{build_number} (%{branch} - %{commit} : %{author}): %{message} (<a href="%{build_url}">Details</a>/<a href="%{compare_url}">Change view</a>)'
    format: html
deploy:
  provider: heroku
  buildpack: python
  api_key:
    # travis encrypt $(heroku auth:token) --add deploy.api_key
    secure: <add_heroku_auth_token_here>
  app:
    master: {{ cookiecutter.repo_name }}-dev
    qa: {{ cookiecutter.repo_name }}-qa
    prod: {{ cookiecutter.repo_name }}-prod
  on:
    repo: {{ cookiecutter.github_username }}/{{ cookiecutter.github_reponame }}
  run:
    - "python {{ cookiecutter.repo_name }}/manage.py migrate"
    - "python {{ cookiecutter.repo_name }}/manage.py collectstatic --noinput"
